# docker build -t realtime-data-generator-backend-base:v1.0.0 -f Dockerfile_base .

FROM openjdk:17-jdk-slim

LABEL maintainer="songchao <90853@fudian-bank.com>"

# 更换apt源为北外源
RUN sed -i 's/deb.debian.org/mirrors.bfsu.edu.cn/g' /etc/apt/sources.list && \
    sed -i 's/security.debian.org/mirrors.bfsu.edu.cn/g' /etc/apt/sources.list

# 安装Maven
RUN apt-get update && apt-get install -y maven

# 设置工作目录
WORKDIR /app

# 创建Maven配置文件
RUN mkdir -p /root/.m2 && \
    echo '<?xml version="1.0" encoding="UTF-8"?>\
    <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"\
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\
    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">\
    <mirrors>\
    <mirror>\
    <id>aliyunmaven</id>\
    <mirrorOf>*</mirrorOf>\
    <name>阿里云公共仓库</name>\
    <url>https://maven.aliyun.com/repository/public</url>\
    </mirror>\
    </mirrors>\
    </settings>' > /root/.m2/settings.xml

# 复制Maven配置文件
COPY pom.xml .

# 复制源代码
COPY src ./src

# 复制本地依赖
COPY libs ./libs

# 安装本地依赖到Maven本地仓库
RUN for file in libs/*.jar; do \
    mvn install:install-file -Dfile=$file -DgroupId=local -DartifactId=$(basename $file .jar) -Dversion=1.0 -Dpackaging=jar; \
    done

# 下载依赖并构建应用
RUN mvn clean package -DskipTests

# 清理源代码（保留构建结果和依赖）
RUN rm -rf src
